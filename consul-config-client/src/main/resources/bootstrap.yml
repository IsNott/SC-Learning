server:
  port: 9400
spring:
  application:
    name: consul-config-client
  cloud:
    consul:
      discovery:
        service-name: ${spring.application.name}
      host: localhost
      port: 8500
#      我们只要修改下Consul中的配置信息，再次调用查看配置的接口，
#      就会发现配置已经刷新。回想下在使用Spring Cloud Config的时候，
#      我们需要调用接口，通过Spring Cloud Bus才能刷新配置。
#      Consul使用其自带的Control Bus 实现了一种事件传递机制，从而实现了动态刷新功能。
      config:
        enabled: true # 是否启用配置中心
        format: yaml # 配置文件格式
        prefix: config # 配置所在目录
        profile-separator: ':' # 设置配置的分隔符
        data-key: data # 配置key的名字，由于Consul是K/V存储，配置存储在对应K的V中
