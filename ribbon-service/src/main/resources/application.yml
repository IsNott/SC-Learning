server:
  port: 9301
spring:
  application:
    name: ribbon-service
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/sc-learning?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
    username: root
    password: 888888
  cloud:
    consul:
      port: 8500
      host: localhost
      discovery:
        service-name: ${spring.application.name}
#  zipkin:
#    base-url: http://localhost:9411 # zipkin-service访问地址
#  sleuth:
#    sampler:
#      probability: 0.1 # 设置sleuth的抽样收集概率

#eureka:
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:8001/eureka/
service-url: # user-service的调用路径
  user-service: http://user-service
# ribbon常用的配置：
#  ribbon: 全局
#    ConnectTimeout: 1000 #服务请求连接超时时间（毫秒）
#    ReadTimeout: 3000 #服务请求处理超时时间（毫秒）
#    OkToRetryOnAllOperations: true #对超时请求启用重试机制
#    MaxAutoRetriesNextServer: 1 #切换重试实例的最大个数
#    MaxAutoRetries: 1 # 切换实例后重试最大次数
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #修改负载均衡算法

user-service: #局部，绑定某个服务
  ribbon:
    ConnectTimeout: 1000 #服务请求连接超时时间（毫秒）
    ReadTimeout: 3000 #服务请求处理超时时间（毫秒）
    OkToRetryOnAllOperations: true #对超时请求启用重试机制
    MaxAutoRetriesNextServer: 1 #切换重试实例的最大个数
    MaxAutoRetries: 1 # 切换实例后重试最大次数
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #修改负载均衡算法